stages:
  - build
  - deploy

build_frontend:
  stage: build
  image: node:latest
  script:
    - echo "Starting building frontend app ..."
    - cd Front/
    - npm install --save-dev
    - npm run build
    - echo "Frontend Build successfully!  :D"
  only:
    - release
    - fix/broken-pipelines

build_backend:
  stage: build
  image: maven:3.8.3-openjdk-17
  script:
    - cd Back/catering
    - echo "Building app..."
    - mvn clean
    - mvn clean install
    - echo "Finished building backend app :D"
  artifacts:
    paths:
      - Back/catering/target/catering-0.0.1-SNAPSHOT.jar
  only:
    - release
    - fix/broken-pipelines

deploy_application_frontend:
  stage: deploy
  needs: [build_frontend]
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  script:
    - echo "deploying frontend app ..."
    - cd Front/
    - aws s3 cp -r dist/* s3://equipo1-c1-bucket-frontend
    - echo "Frontend deploy successfully!  :D"
  only:
    - release
    - fix/broken-pipelines

deploy_Backend:
  stage: deploy
  needs: [build_backend]
  image: alpine:3.11
  script:
    - export DRIVER_CLASS_NAME=''
    - export DB_URL=$DB_URL
    - export USER=$DB_USER
    - export PASSWORD=$DB_PASSWORD
    - export DB_PLATFORM=''
    - export H2_CONSOLE=''
    - export AccessKey=$AWS_ACCESS_KEY_ID
    - export SecretKey=$AWS_SECRET_ACCESS_KEY
    - export BucketName=$BUCKET_NAME
    - export URL_INSTANCE=$URL_EC2_INSTANCE
    - export MAIL_USERNAME=$MAIL_USERNAME_EMAIL
    - export MAIL_PASSWORD=$MAIL_PASSWORD_EMAIL
    - ssh -i $EC2_PRIVATE_ACCESS_KEY ubuntu@18.188.200.107 "cd backendApp/ pkill -f catering-0.0.1-SNAPSHOT.jar rm -rf catering-0.0.1-SNAPSHOT.jar"
    - scp -i $EC2_PRIVATE_ACCESS_KEY ../Back/catering/target/catering-0.0.1-SNAPSHOT.jar ubuntu@18.188.200.107:/home/ubuntu/backendApp
    - ssh -i $EC2_PRIVATE_ACCESS_KEY ubuntu@18.188.200.107 cd backendApp/ java -jar catering-0.0.1-SNAPSHOT.jar &"
    - echo "Finished deploying backend app :D"
  only:
    - release
    - fix/broken-pipelines